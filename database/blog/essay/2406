{"id":2406,"content":"想写一个能让nest启动后马上执行方法的装饰器(这个一般都是开发用，不然每次写个新方法都要去模块初始化的钩子那里先注入再调用来调试麻烦得要死)，但是又不知道怎么写，想来想去在装饰器里面没办法拿到实例，添加metadata信息又不知道怎么在模块初始化的钩子里面拿到带有metadata信息的方法\n就参考了一下nestjs/schedule，发现他也只是遍历所有Provider，检查是否有设置metadata，还以为会有通过metadata key获取实例和方法集合的操作。\n\n```typescript\nexport class AppModule implements OnApplicationBootstrap {\n\nconstructor(\n    private readonly discoveryService: DiscoveryService,\n    private readonly metadataScanner: MetadataScanner,\n    private readonly reflector: Reflector\n  ) { }\n\n  onApplicationBootstrap(){\n    const providers: InstanceWrapper[] = this.discoveryService.getProviders();\n    providers.forEach((wrapper: InstanceWrapper) => {\n      const { instance } = wrapper;\n      if (!instance || !Object.getPrototypeOf(instance)) {\n        return;\n      }\n      this.metadataScanner.scanFromPrototype(\n        instance,\n        Object.getPrototypeOf(instance),\n        (key: string) => {\n             const metaData = this.reflector.get(MetaKey, instance[key]);\n             if(metaData){\n               // do something\n             }\n        },\n      );\n    });\n  }\n}\n\n\n```","hide":"","time":"2020-07-27T12:17:16.000Z"}