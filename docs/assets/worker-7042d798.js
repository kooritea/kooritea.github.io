(function(){"use strict";function S(e){return Math.floor(e)===e}function h(e){var t={times:1,num:0};if(S(e))return t.num=e,t;var a=e+"",r=a.indexOf("."),s=a.substr(r+1).length,o=Math.pow(10,s),c=parseInt(e*o+.5,10);return t.times=o,t.num=c,t}function u(e,t,a){var r=h(e),s=h(t),o=r.num,c=s.num,n=r.times,i=s.times,l=n>i?n:i,f=null;switch(a){case"add":return n===i?f=o+c:n>i?f=o+c*(n/i):f=o*(i/n)+c,f/l;case"subtract":return n===i?f=o-c:n>i?f=o-c*(n/i):f=o*(i/n)-c,f/l;case"multiply":return f=o*c/(n*i),f;case"divide":return f=o/c*(i/n),f}}function T(e,t){if(typeof e!="number"||typeof t!="number")throw new Error("args error");return u(e,t,"add")}function N(e,t){if(typeof e!="number"||typeof t!="number")throw new Error("args error");return u(e,t,"subtract")}function _(e,t){if(typeof e!="number"||typeof t!="number")throw new Error("args error");return u(e,t,"multiply")}function A(e,t){if(typeof e!="number"||typeof t!="number")throw new Error("args error");return u(e,t,"divide")}var d={add:T,subtract:N,multiply:_,divide:A};const E=(e,t)=>e.reduce((a,r)=>(a[t.indexOf(r)]+=1,a),[...Array(t.length)].fill(0)),g=(e,t,a)=>{let r=0;for(let s=t;s<a;s+=1)r+=e[s];return r},L=e=>Array.from(new Set(e)).sort((t,a)=>t-a),v=(e,t,a,r)=>{let s=0;for(let o=t;o<a;o+=1)s+=e[o];return s/r},y=(e,t,a,r,s)=>{let o=0;for(let c=a;c<r;c+=1)o+=e[c]*t[c];return o*s},D=(e,t,a,r,s,o)=>{let c=0;for(let n=a;n<r;n+=1){const i=t[n]-s;c+=i*i*e[n]}return c*o},O=(e,t,a,r)=>e*t+a*r;function F(e){const t=e.map(c=>c.map(n=>n[4]).flat(1)).flat(1),a=L(t),r=E(t,a),{length:s}=t,o=[...Array(a.length)].map((c,n)=>{const l=n,f=n,m=r.length,M=1/g(r,0,l),x=1/g(r,f,m),V=v(r,0,l,s),z=D(r,a,0,l,y(r,a,0,l,M),M),B=v(r,f,m,s),q=D(r,a,f,m,y(r,a,f,m,x),x),I=O(V,z,B,q);return isNaN(I)?Number.POSITIVE_INFINITY:I});return a[o.indexOf(Math.min(...o))]}function R(e,t,a){return e*6966+t*23436+a*2366>>15}function p(e,t){const a=t.direction==="vertical",r=[];let s=-1,o=-1;for(let n=0;n<e.imageData.length;){s++,(r.length===0||r[r.length-1].length===e[a?"width":"height"])&&(r.push([]),o++,s=-1);const i=r[r.length-1],l=R(e.imageData[n],e.imageData[n+1],e.imageData[n+2]);i.push([e.imageData[n],e.imageData[n+1],e.imageData[n+2],e.imageData[n+3],l,"",[s,o]]),n+=4}const c=F(r);for(const n in r)for(s in r[n])r[n][s][5]=c>r[n][s][4]?"rgba(0,0,0,255)":"rgba(255,255,255,255)";return r}let b=0;function k(e,t,a={}){let r;for(let s=Math.max(1,a.startSearchSize??1);s<=(a.maxSearchSize||e.height);s++){const o=C(e,t,s,a);if(r)r.matchPerc<o.matchPerc&&(r={...o,offset:s});else{r={...o,offset:s};continue}const c=Date.now();c>b+1e3&&(b=c,self.postMessage({code:"progress",data:Number((a._progressCompleteLine/a._progressAllLine*100).toFixed(2))}))}return r}function C(e,t,a,r={}){const s=[];for(let c=0;c<a;c++)if(r.sort==="desc"){const n=e.colorData[t.colorData.length-a+c],i=t.colorData[c];s.push(w(n,i,r))}else{const n=e.colorData[c],i=t.colorData[t.colorData.length-a+c];s.push(w(n,i,r))}const{matchPerc:o}=P(s);return{areaDiffResult:s,matchPerc:o}}function w(e,t,a={}){const r=e.map((o,c)=>G(e[c],t[c],a)),{matchPerc:s}=P(r);return a._progressCompleteLine++,{lineDiffResult:r,matchPerc:s}}function G(e,t,a={pointDiffType:"gray"}){if(a.pointDiffType==="rgb"){const r=(e[0]+t[0])/2,s=e[0]-t[0],o=e[1]-t[1],c=e[2]-t[2],n=Math.sqrt((2+r/256)*s**2+4*o**2+(2+(255-r)/256)*c**2);return{colorDistance:n,matchPerc:d.subtract(100,Number((n/764*100).toFixed(2)))}}if(a.pointDiffType==="gray")return{matchPerc:d.subtract(100,Number((Math.abs(e[4]-t[4])/255*100).toFixed()))};if(a.pointDiffType==="otsu")return{point1:e,point2:t,matchPerc:e[5]===t[5]?100:0}}function P(e){const t=e.reduce((a,r)=>d.add(a,r.matchPerc),0);return{matchPerc:Number((t/(100*e.length)*100).toFixed(2))}}self.addEventListener("message",function(e){const t=e.data;switch(t.cmd){case"getMaxMatchOffset":{const a=t.data.options;t.data.image1.colorData=p(t.data.image1,a),delete t.data.image1.imageData,t.data.image2.colorData=p(t.data.image2,a),delete t.data.image2.imageData,a._progressCompleteLine=0;const r=t.data.image1[a.direction==="vertical"?"height":"width"],s=r*(1+r)/2;a._progressAllLine=s,self.postMessage({code:"result",data:k(t.data.image1,t.data.image2,a)});break}default:self.postMessage({code:"Unknow Cmd: "+t.cmd})}},!1)})();
